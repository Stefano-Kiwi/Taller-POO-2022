package interfaces;//GEN-LINE:variables

import acceso.*;
import inventario.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel Altamirano
 */
public class ListaObras extends javax.swing.JFrame {

    boolean esConsulta = false;
    /**
     * Creates new form Principal
     */
    Bibliotecario bibliotecario;
    
    public ListaObras() {
        initComponents();
        cargarDatos();
        this.setLocationRelativeTo(null);
    } 
    public ListaObras(Bibliotecario b) {
        initComponents();
        cargarDatos();
        this.setLocationRelativeTo(null);
        bibliotecario = b;
    }
    
    public ListaObras(boolean esConsulta) {
        initComponents();
        cargarDatos();
        this.setLocationRelativeTo(null);
        this.esConsulta = esConsulta;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Volver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablita = new javax.swing.JTable();
        editorialBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Obras");

        Volver.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        Tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Autor", "ISBN", "Genero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tablita);

        editorialBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        editorialBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorialBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Obras filtradas por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editorialBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editorialBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {    
        this.setVisible(false);
        if(esConsulta==true){
            new Consultas().setVisible(true);
        }else{
            new Administracion(bibliotecario).setVisible(true);
        }
        
    }                                      

    private void editorialBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             
    String opcionElegida = editorialBox.getSelectedItem().toString();
    
    Almacenamiento a = new Almacenamiento();
    
    a.obtenerObras("recursos/ListadoDeObras.txt");
    
    List<Obra> obras = a.getObras();
    
    List<Obra> obrasAmostrar = new ArrayList();
    
        for (Obra obra : obras) {
            if(obra.getEdicion().getNombreEditorial().equals(opcionElegida)){
                obrasAmostrar.add(obra);
            }
        }
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Autor");
        modelo.addColumn("ISBN");
        modelo.addColumn("Genero");
        modelo.addColumn("Nombre Coleccion");
        modelo.addColumn("ISBN Coleccion");
        Tablita.setModel(modelo);
        
        for (Obra obra : obrasAmostrar) {
            String[] campos = obra.tablaGUI().split(",");
            modelo.addRow(campos);
        }
        
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaObras().setVisible(true);

            }
        });
    }

    public void cargarDatos() {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Autor");
        modelo.addColumn("ISBN");
        modelo.addColumn("Genero");
        modelo.addColumn("Nombre Coleccion");
        modelo.addColumn("ISBN Coleccion");
        Tablita.setModel(modelo);

        //Creamos de manaera manual bla bla etc
        Almacenamiento a = new Almacenamiento();
        a.obtenerObras("recursos/ListadoDeObras.txt");
        List<Obra> obras = a.getObras();
        
        List<String> nombreEditorial = new ArrayList();
        
        for (var obra : obras) {
            String[] campos = obra.tablaGUI().split(",");
            modelo.addRow(campos);
            if(!nombreEditorial.contains(obra.getEdicion().getNombreEditorial())){
                nombreEditorial.add(obra.getEdicion().getNombreEditorial());
            }
        }
        
        //array de Strings para luego usarlo en el combobox
        
        String[] edit = new String[nombreEditorial.size()];
        
        //Iteramos los nombre de las editoriales
        for (int i = 0; i < nombreEditorial.size(); i++) {
            edit[i] = nombreEditorial.get(i); //Agregamos al array los nombres
        }
        
        // Se muestran los nombres en el combobox
        editorialBox.setModel(new javax.swing.DefaultComboBoxModel<>(edit));
               
        
        
    }


    // Variables declaration - do not modify                     
    private javax.swing.JTable Tablita;
    private javax.swing.JButton Volver;
    private javax.swing.JComboBox<String> editorialBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
