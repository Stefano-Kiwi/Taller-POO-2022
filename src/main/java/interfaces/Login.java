package interfaces;

import acceso.Bibliotecario;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class Login extends javax.swing.JFrame {

    
    Bibliotecario bibliotecario;

    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
        bibliotecario = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LOGIN = new javax.swing.JLabel();
        Usuario_etiqueta = new javax.swing.JLabel();
        Contraseña_etiqueta = new javax.swing.JLabel();
        btn_Ingresar = new javax.swing.JButton();
        Usuario_Textbox = new javax.swing.JTextField();
        Contraseña_Textbox = new javax.swing.JTextField();
        btn_Salir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar Sesion");
        setBackground(new java.awt.Color(255, 153, 102));
        setFocusCycleRoot(false);
        setResizable(false);

        LOGIN.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        LOGIN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LOGIN.setText("Iniciar Sesion");

        Usuario_etiqueta.setText("Usuario");

        Contraseña_etiqueta.setText("Contraseña");

        btn_Ingresar.setBackground(new java.awt.Color(0, 153, 255));
        btn_Ingresar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Ingresar.setText("Ingresar");
        btn_Ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IngresarActionPerformed(evt);
            }
        });

        Usuario_Textbox.setToolTipText("");
        Usuario_Textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Usuario_TextboxActionPerformed(evt);
            }
        });

        Contraseña_Textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Contraseña_TextboxActionPerformed(evt);
            }
        });

        btn_Salir.setBackground(new java.awt.Color(0, 0, 0));
        btn_Salir.setForeground(new java.awt.Color(255, 255, 255));
        btn_Salir.setText("Salir");
        btn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SalirActionPerformed(evt);
            }
        });

        jLabel1.setText("usuario:admin, contraseña:admin");

        jLabel2.setText("usuario:biblio2022, contraseña:biblio2022");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LOGIN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 344, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Usuario_etiqueta, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Usuario_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btn_Salir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(226, 226, 226)
                                .addComponent(btn_Ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Contraseña_etiqueta)
                                    .addComponent(Contraseña_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 174, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(79, 79, 79)
                .addComponent(LOGIN)
                .addGap(33, 33, 33)
                .addComponent(Usuario_etiqueta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Usuario_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(Contraseña_etiqueta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Contraseña_Textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(btn_Salir)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Bibliotecario getBibliotecario() {
        return this.bibliotecario;
    }

    private void setBibliotecario(Bibliotecario b) {
        this.bibliotecario = b;
    }

    private void btn_IngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IngresarActionPerformed
        try {
            Ingresar();
        } catch (Exception ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_IngresarActionPerformed

    private void btn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SalirActionPerformed
        this.setVisible(false);
        new Inicio().setVisible(true);
    }//GEN-LAST:event_btn_SalirActionPerformed

    private void Usuario_TextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Usuario_TextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Usuario_TextboxActionPerformed

    private void Contraseña_TextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Contraseña_TextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Contraseña_TextboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Contraseña_Textbox;
    private javax.swing.JLabel Contraseña_etiqueta;
    private javax.swing.JLabel LOGIN;
    private javax.swing.JTextField Usuario_Textbox;
    private javax.swing.JLabel Usuario_etiqueta;
    private javax.swing.JButton btn_Ingresar;
    private javax.swing.JButton btn_Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    /**
     * Este método solo se ejecuta si el método “Ingresar()” fue posteriormente
     * llamado y tuvo una ejecución exitosa. Recibe como parámetro el
     * bibliotecario que accedió al sistema
     *
     * @param b
     */
    private void irAdministracion(Bibliotecario b) {
        this.setVisible(false);
        new Administracion(b).setVisible(true);
    }

    /**
     * Este método sirve para que el bibliotecario pueda acceder al sistema
     * mediante un usuario y una contraseña. Hace las verificaciones para
     * iniciar sesión de manera exitosa y obliga al usuario a rellenar los
     * campos (en caso de dejarlos vacíos) y luego llama al metodo
     * ”IrAdministracion()”
     *
     * @throws Exception IOException
     */
    private void Ingresar() throws Exception {
        boolean usuarioCorrecto = false;
        boolean contraseniaCorrecta = false;
        BufferedReader br = null;

        try {
            br = new BufferedReader(new FileReader("recursos/usuarios.txt"));
            String line = br.readLine();
            while (line != null) {
                String[] campos = line.split(",");

                if (Usuario_Textbox.getText().isEmpty() || Contraseña_Textbox.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Completar los campos correspondientes");
                }

                if (Usuario_Textbox.getText().equals(campos[0])) {
                    usuarioCorrecto = true;
                }
                if (usuarioCorrecto && Contraseña_Textbox.getText().equals(campos[1])) {
                    String fecha = campos[6];
                    String[] fechaArr = fecha.split("/");
                    LocalDate fechaNa = LocalDate.of(Integer.parseInt(fechaArr[2]), Integer.parseInt(fechaArr[1]), Integer.parseInt(fechaArr[0]));
                    Bibliotecario biblio = new Bibliotecario(campos[2], campos[3], campos[4], Integer.parseInt(campos[5]), fechaNa, campos[7], campos[8], campos[9], campos[10], campos[11], Integer.parseInt(campos[12]), campos[13], campos[14], campos[0], campos[1]);
                    this.setBibliotecario(biblio);
                    irAdministracion(biblio);

                    contraseniaCorrecta = true;
                }

                line = br.readLine();
            }

            if (!usuarioCorrecto) {
                throw new Exception("Usuario no existe");
            }
            if (!contraseniaCorrecta) {
                throw new Exception("Contrasenia Incorrecta");
            }

            br.close();

        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, e.getMessage());
        }
    }
}
