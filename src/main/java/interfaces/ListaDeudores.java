package interfaces;

import acceso.Lector;
import acceso.Prestamo;
import inventario.Almacenamiento;
import inventario.Ejemplar;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel Altamirano
 */
public class ListaDeudores extends javax.swing.JFrame {

    /**
     * Creates new form ListaDeudores
     */
    
    

    public ListaDeudores() {
        initComponents();
        cargarDeudores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDeudores = new javax.swing.JTable();
        Volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listado de deudores");

        tablaDeudores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Tipo documento", "DNI", "Telefono", "Cantidad de ejemplares vencidos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaDeudores);
        if (tablaDeudores.getColumnModel().getColumnCount() > 0) {
            tablaDeudores.getColumnModel().getColumn(0).setMinWidth(30);
            tablaDeudores.getColumnModel().getColumn(0).setPreferredWidth(100);
            tablaDeudores.getColumnModel().getColumn(0).setMaxWidth(100);
            tablaDeudores.getColumnModel().getColumn(1).setMinWidth(30);
            tablaDeudores.getColumnModel().getColumn(1).setPreferredWidth(100);
            tablaDeudores.getColumnModel().getColumn(1).setMaxWidth(100);
            tablaDeudores.getColumnModel().getColumn(2).setMinWidth(30);
            tablaDeudores.getColumnModel().getColumn(2).setPreferredWidth(80);
            tablaDeudores.getColumnModel().getColumn(2).setMaxWidth(80);
            tablaDeudores.getColumnModel().getColumn(3).setMinWidth(65);
            tablaDeudores.getColumnModel().getColumn(3).setPreferredWidth(80);
            tablaDeudores.getColumnModel().getColumn(3).setMaxWidth(80);
            tablaDeudores.getColumnModel().getColumn(4).setMinWidth(80);
            tablaDeudores.getColumnModel().getColumn(4).setPreferredWidth(90);
            tablaDeudores.getColumnModel().getColumn(4).setMaxWidth(90);
            tablaDeudores.getColumnModel().getColumn(5).setMinWidth(10);
            tablaDeudores.getColumnModel().getColumn(5).setPreferredWidth(200);
        }

        Volver.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(447, 447, 447)
                .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(639, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        this.setVisible(false);
        new Administracion().setVisible(true);
    }//GEN-LAST:event_VolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaDeudores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaDeudores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaDeudores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaDeudores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaDeudores().setVisible(true);
            }
        });
    }

    public void cargarDeudores() {
        Almacenamiento a = new Almacenamiento();
        List<Lector> deudores = new ArrayList<>();
        a.obtenerObras("recursos/ListadoDeObras.txt");
        a.obtenerEjemplares("recursos/ListadoDeEjemplares.txt");
        a.obtenerPrestamos("recursos/ListaPrestamos.txt");
        
        List<Prestamo> prestamos = a.getPrestamosActivos();
        LocalDate hoy = LocalDate.now();
        
        for (Prestamo prestamo : prestamos) {
            if(!prestamo.getFechaDevolucion().isAfter(hoy)){
                prestamo.getLector().AgregarEjemplar(prestamo.getEjemplar());
                if (!deudores.contains(prestamo.getLector())){
                deudores.add(prestamo.getLector());
                }
                
                System.out.println("prestamo ejemplar"+prestamo.getEjemplar());
                       
            }
        }
        
       
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Tipo Documento");
        modelo.addColumn("DNI");
        modelo.addColumn("Telefono");
        modelo.addColumn("Ejemplares vencidos");
        tablaDeudores.setModel(modelo);

        for (Lector lector : deudores) {
            String[] campos = lector.tablaGUI().split(",");
            modelo.addRow(campos);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Volver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDeudores;
    // End of variables declaration//GEN-END:variables
}
